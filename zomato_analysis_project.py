# -*- coding: utf-8 -*-
"""ZOMATO ANALYSIS PROJECT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QXAE1EG1nPCqa21i9UGTE3c7kDSafYB-

# **ZOMATO RESTAURANT ANALYSIS**
"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

df = pd.read_csv('/content/zomato.csv',usecols=['restaurant name','restaurant type','rate (out of 5)','num of ratings','avg cost (two people)','online_order','table booking','cuisines type','area','local address'])
df

"""# **DATA ASSESSING**"""

df.info()

df.shape

df.isnull().sum()

df.describe()



"""# **DATA CLEANING**"""

df['rate (out of 5)'].fillna(3.4,inplace=True)
df['avg cost (two people)'].fillna(290,inplace=True)

"""# **EXPLORATORY DATA ANALYSIS**"""

import matplotlib.pyplot as plt

restaurant_type_counts = df['restaurant type'].value_counts()
restaurant_type_fig = px.bar(restaurant_type_counts, x=restaurant_type_counts.index, y=restaurant_type_counts.values, title='Distribution of Restaurant Types')

restaurant_type_fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white')
)

restaurant_type_fig.show()

rating_counts = df['rate (out of 5)'].value_counts().sort_index()
rating_fig = px.bar(rating_counts, x=rating_counts.index, y=rating_counts.values, title='Restaurant Ratings Distribution')

rating_fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white')
)

rating_fig.show()

rating_vs_num_ratings = px.scatter(df, x='num of ratings', y='rate (out of 5)', title='Number of Ratings vs. Average Rating')

rating_vs_num_ratings.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),
    yaxis=dict(showgrid=False)
)

rating_vs_num_ratings.show()

avg_cost_fig = px.histogram(df, x='avg cost (two people)', title='Average Cost Distribution')

avg_cost_fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white')
)

avg_cost_fig.show()

online_order_counts = df['online_order'].value_counts()
online_order_fig = px.pie(online_order_counts, names=online_order_counts.index, title='Online Ordering Distribution')

online_order_fig.update_layout(
    paper_bgcolor='#4e5363',
    title_font=dict(color='white')
)

online_order_fig.show()

online_vs_table = px.histogram(df, x='online_order', color='table booking', barmode='group', title='Online Ordering vs. Table Booking')

online_vs_table.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),

)

online_vs_table.show()

cuisine_counts = df['cuisines type'].str.split(', ', expand=True).stack().value_counts()
cuisine_fig = px.bar(cuisine_counts, x=cuisine_counts.index, y=cuisine_counts.values, title='Popular Cuisines')

cuisine_fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),
    yaxis=dict(showgrid=False)
)

cuisine_fig.show()

area_counts = df['area'].value_counts()
area_fig = px.bar(area_counts, x=area_counts.index, y=area_counts.values, title='Restaurants Distribution by Area')

area_fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),
    yaxis=dict(showgrid=False)
)

area_fig.show()

fig = px.box(df, x='cuisines type', y='avg cost (two people)', title='Average Cost by Cuisine Type')

fig.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),
    yaxis=dict(showgrid=False),
    width=1200,
    height=1000
)

fig.show()

ratings_vs_cost_corr = px.scatter(df, x='num of ratings', y='avg cost (two people)', title='Number of Ratings vs. Average Cost Correlation')

ratings_vs_cost_corr.update_layout(
    paper_bgcolor='#4e5363',
    plot_bgcolor='#4e5363',
    font=dict(color='white'),
    yaxis=dict(showgrid=False)
)

ratings_vs_cost_corr.show()

!pip install powerbiclient

from powerbiclient import Report, models

workspace_id = "fd8793de-3c75-4857-92e3-60356264097d"  # Use "me" if the report is in "My Workspace"
report_id = "5129c53b-5051-4f9d-8fc3-03b7b735512a"

from powerbiclient.authentication import DeviceCodeLoginAuthentication

device_auth = DeviceCodeLoginAuthentication()

from google.colab import output
output.enable_custom_widget_manager()

report = Report(workspace_id=workspace_id, report_id=report_id, auth=device_auth)
report